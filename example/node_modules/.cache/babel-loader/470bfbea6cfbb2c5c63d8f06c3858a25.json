{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/samuel.olvera/Documents/sites/htdocs/react-bee/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectDomainLocale = detectDomainLocale;\n\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n  var domainItem;\n\n  if (domainItems) {\n    if (detectedLocale) {\n      detectedLocale = detectedLocale.toLowerCase();\n    }\n\n    var _iterator = _createForOfIteratorHelper(domainItems),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        var ref, ref1; // remove port if present\n\n        var domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some(function (locale) {\n          return locale.toLowerCase() === detectedLocale;\n        }))) {\n          domainItem = item;\n          break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return domainItem;\n}","map":{"version":3,"sources":["../../../../shared/lib/i18n/detect-domain-locale.ts"],"names":["detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","toLowerCase","item","domainHostname","domain","split","defaultLocale","locales","some","locale"],"mappings":"AAAA;;;;;;;QAEgBA,kB,GAAAA,kB;;AAAT,SAASA,kBAAT,CACLC,WADK,EAELC,QAFK,EAGLC,cAHK,EAIL;EACA,IAAIC,UAAJ;;EAEA,IAAIH,WAAJ,EAAiB;IACf,IAAIE,cAAJ,EAAoB;MAClBA,cAAc,GAAGA,cAAc,CAACE,WAAfF,EAAjBA;IACD;;IAHc,2CAKIF,WALJ;IAAA;;IAAA;MAKf,oDAAgC;QAAA,IAArBK,IAAqB;YAEPA,G,EAIrBA,I,CAN4B,CAC9B;;QACA,IAAMC,cAAc,GAAGD,CAAAA,GAAW,GAAXA,IAAI,CAACE,MAALF,KAAW,IAAXA,GAAAA,KAAAA,CAAAA,GAAAA,GAAW,CAAEG,KAAbH,CAAmB,GAAnBA,EAAwB,CAAxBA,EAA2BD,WAA3BC,EAAvB;;QACA,IACEJ,QAAQ,KAAKK,cAAbL,IACAC,cAAc,KAAKG,IAAI,CAACI,aAALJ,CAAmBD,WAAnBC,EADnBJ,KAEAI,CAAAA,IAAY,GAAZA,IAAI,CAACK,OAALL,KAAY,IAAZA,GAAAA,KAAAA,CAAAA,GAAAA,IAAY,CAAEM,IAAdN,CAAmB,UAACO,MAAD;UAAA,OAAYA,MAAM,CAACR,WAAPQ,OAAyBV,cAArC;QAAA,CAAnBG,CAFAJ,CADF,EAIE;UACAE,UAAU,GAAGE,IAAbF;UACA;QACD;MACF;IAhBc;MAAA;IAAA;MAAA;IAAA;EAiBhB;;EAED,OAAOA,UAAP;AACD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.detectDomainLocale = detectDomainLocale;\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map"]},"metadata":{},"sourceType":"script"}