{"ast":null,"code":"\"use strict\";\n\nvar _toArray = require(\"/Users/samuel.olvera/Documents/sites/htdocs/react-bee/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveRewrites;\n\nvar _pathMatch = require(\"./path-match\");\n\nvar _prepareDestination = require(\"./prepare-destination\");\n\nvar _removeTrailingSlash = require(\"./remove-trailing-slash\");\n\nvar _normalizeLocalePath = require(\"../../i18n/normalize-locale-path\");\n\nvar _removeBasePath = require(\"../../../../client/remove-base-path\");\n\nvar _parseRelativeUrl = require(\"./parse-relative-url\");\n\nfunction resolveRewrites(asPath, pages, rewrites, query, resolveHref, locales) {\n  var matchedPage = false;\n  var externalDest = false;\n  var parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(asPath);\n  var fsPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(parsedAs.pathname), locales).pathname);\n  var resolvedHref;\n\n  var handleRewrite = function handleRewrite(rewrite) {\n    var matcher = (0, _pathMatch).getPathMatch(rewrite.source + (process.env.__NEXT_TRAILING_SLASH ? '(/)?' : ''), {\n      removeUnnamedParams: true,\n      strict: true\n    });\n    var params = matcher(parsedAs.pathname);\n\n    if (rewrite.has && params) {\n      var hasParams = (0, _prepareDestination).matchHas({\n        headers: {\n          host: document.location.hostname\n        },\n        cookies: document.cookie.split('; ').reduce(function (acc, item) {\n          var _item$split = item.split('='),\n              _item$split2 = _toArray(_item$split),\n              key = _item$split2[0],\n              value = _item$split2.slice(1);\n\n          acc[key] = value.join('=');\n          return acc;\n        }, {})\n      }, rewrite.has, parsedAs.query);\n\n      if (hasParams) {\n        Object.assign(params, hasParams);\n      } else {\n        params = false;\n      }\n    }\n\n    if (params) {\n      if (!rewrite.destination) {\n        // this is a proxied rewrite which isn't handled on the client\n        externalDest = true;\n        return true;\n      }\n\n      var destRes = (0, _prepareDestination).prepareDestination({\n        appendParamsToQuery: true,\n        destination: rewrite.destination,\n        params: params,\n        query: query\n      });\n      parsedAs = destRes.parsedDestination;\n      asPath = destRes.newUrl;\n      Object.assign(query, destRes.parsedDestination.query);\n      fsPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(asPath), locales).pathname);\n\n      if (pages.includes(fsPathname)) {\n        // check if we now match a page as this means we are done\n        // resolving the rewrites\n        matchedPage = true;\n        resolvedHref = fsPathname;\n        return true;\n      } // check if we match a dynamic-route, if so we break the rewrites chain\n\n\n      resolvedHref = resolveHref(fsPathname);\n\n      if (resolvedHref !== asPath && pages.includes(resolvedHref)) {\n        matchedPage = true;\n        return true;\n      }\n    }\n  };\n\n  var finished = false;\n\n  for (var i = 0; i < rewrites.beforeFiles.length; i++) {\n    // we don't end after match in beforeFiles to allow\n    // continuing through all beforeFiles rewrites\n    handleRewrite(rewrites.beforeFiles[i]);\n  }\n\n  matchedPage = pages.includes(fsPathname);\n\n  if (!matchedPage) {\n    if (!finished) {\n      for (var _i = 0; _i < rewrites.afterFiles.length; _i++) {\n        if (handleRewrite(rewrites.afterFiles[_i])) {\n          finished = true;\n          break;\n        }\n      }\n    } // check dynamic route before processing fallback rewrites\n\n\n    if (!finished) {\n      resolvedHref = resolveHref(fsPathname);\n      matchedPage = pages.includes(resolvedHref);\n      finished = matchedPage;\n    }\n\n    if (!finished) {\n      for (var _i2 = 0; _i2 < rewrites.fallback.length; _i2++) {\n        if (handleRewrite(rewrites.fallback[_i2])) {\n          finished = true;\n          break;\n        }\n      }\n    }\n  }\n\n  return {\n    asPath: asPath,\n    parsedAs: parsedAs,\n    matchedPage: matchedPage,\n    resolvedHref: resolvedHref,\n    externalDest: externalDest\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/resolve-rewrites.ts"],"names":["resolveRewrites","asPath","pages","rewrites","query","resolveHref","locales","matchedPage","externalDest","parsedAs","parseRelativeUrl","fsPathname","removeTrailingSlash","normalizeLocalePath","removeBasePath","pathname","resolvedHref","handleRewrite","rewrite","matcher","getPathMatch","source","process","env","__NEXT_TRAILING_SLASH","removeUnnamedParams","strict","params","has","hasParams","matchHas","headers","host","document","location","hostname","cookies","cookie","split","reduce","acc","item","key","value","join","Object","assign","destination","destRes","prepareDestination","appendParamsToQuery","parsedDestination","newUrl","includes","finished","i","beforeFiles","length","afterFiles","fallback"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = resolveRewrites;\nvar _pathMatch = require(\"./path-match\");\nvar _prepareDestination = require(\"./prepare-destination\");\nvar _removeTrailingSlash = require(\"./remove-trailing-slash\");\nvar _normalizeLocalePath = require(\"../../i18n/normalize-locale-path\");\nvar _removeBasePath = require(\"../../../../client/remove-base-path\");\nvar _parseRelativeUrl = require(\"./parse-relative-url\");\nfunction resolveRewrites(asPath, pages, rewrites, query, resolveHref, locales) {\n    let matchedPage = false;\n    let externalDest = false;\n    let parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(asPath);\n    let fsPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(parsedAs.pathname), locales).pathname);\n    let resolvedHref;\n    const handleRewrite = (rewrite)=>{\n        const matcher = (0, _pathMatch).getPathMatch(rewrite.source + (process.env.__NEXT_TRAILING_SLASH ? '(/)?' : ''), {\n            removeUnnamedParams: true,\n            strict: true\n        });\n        let params = matcher(parsedAs.pathname);\n        if (rewrite.has && params) {\n            const hasParams = (0, _prepareDestination).matchHas({\n                headers: {\n                    host: document.location.hostname\n                },\n                cookies: document.cookie.split('; ').reduce((acc, item)=>{\n                    const [key, ...value] = item.split('=');\n                    acc[key] = value.join('=');\n                    return acc;\n                }, {})\n            }, rewrite.has, parsedAs.query);\n            if (hasParams) {\n                Object.assign(params, hasParams);\n            } else {\n                params = false;\n            }\n        }\n        if (params) {\n            if (!rewrite.destination) {\n                // this is a proxied rewrite which isn't handled on the client\n                externalDest = true;\n                return true;\n            }\n            const destRes = (0, _prepareDestination).prepareDestination({\n                appendParamsToQuery: true,\n                destination: rewrite.destination,\n                params: params,\n                query: query\n            });\n            parsedAs = destRes.parsedDestination;\n            asPath = destRes.newUrl;\n            Object.assign(query, destRes.parsedDestination.query);\n            fsPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(asPath), locales).pathname);\n            if (pages.includes(fsPathname)) {\n                // check if we now match a page as this means we are done\n                // resolving the rewrites\n                matchedPage = true;\n                resolvedHref = fsPathname;\n                return true;\n            }\n            // check if we match a dynamic-route, if so we break the rewrites chain\n            resolvedHref = resolveHref(fsPathname);\n            if (resolvedHref !== asPath && pages.includes(resolvedHref)) {\n                matchedPage = true;\n                return true;\n            }\n        }\n    };\n    let finished = false;\n    for(let i = 0; i < rewrites.beforeFiles.length; i++){\n        // we don't end after match in beforeFiles to allow\n        // continuing through all beforeFiles rewrites\n        handleRewrite(rewrites.beforeFiles[i]);\n    }\n    matchedPage = pages.includes(fsPathname);\n    if (!matchedPage) {\n        if (!finished) {\n            for(let i = 0; i < rewrites.afterFiles.length; i++){\n                if (handleRewrite(rewrites.afterFiles[i])) {\n                    finished = true;\n                    break;\n                }\n            }\n        }\n        // check dynamic route before processing fallback rewrites\n        if (!finished) {\n            resolvedHref = resolveHref(fsPathname);\n            matchedPage = pages.includes(resolvedHref);\n            finished = matchedPage;\n        }\n        if (!finished) {\n            for(let i = 0; i < rewrites.fallback.length; i++){\n                if (handleRewrite(rewrites.fallback[i])) {\n                    finished = true;\n                    break;\n                }\n            }\n        }\n    }\n    return {\n        asPath,\n        parsedAs,\n        matchedPage,\n        resolvedHref,\n        externalDest\n    };\n}\n\n//# sourceMappingURL=resolve-rewrites.js.map"]},"metadata":{},"sourceType":"script"}