{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseRelativeUrl = parseRelativeUrl;\n\nvar _utils = require(\"../../utils\");\n\nvar _querystring = require(\"./querystring\");\n\nfunction parseRelativeUrl(url, base) {\n  var globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils).getLocationOrigin());\n  var resolvedBase = base ? new URL(base, globalBase) : url.startsWith('.') ? new URL(typeof window === 'undefined' ? 'http://n' : window.location.href) : globalBase;\n\n  var _URL = new URL(url, resolvedBase),\n      pathname = _URL.pathname,\n      searchParams = _URL.searchParams,\n      search = _URL.search,\n      hash = _URL.hash,\n      href = _URL.href,\n      origin = _URL.origin;\n\n  if (origin !== globalBase.origin) {\n    throw new Error(\"invariant: invalid relative URL, router received \".concat(url));\n  }\n\n  return {\n    pathname: pathname,\n    query: (0, _querystring).searchParamsToUrlQuery(searchParams),\n    search: search,\n    hash: hash,\n    href: href.slice(globalBase.origin.length)\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/parse-relative-url.ts"],"names":["parseRelativeUrl","url","base","globalBase","URL","window","getLocationOrigin","resolvedBase","startsWith","location","href","pathname","searchParams","search","hash","origin","Error","query","searchParamsToUrlQuery","slice","length"],"mappings":"AAAA;;;;;QAkBgBA,gB,GAAAA,gB;;AAjBkB,IAAA,MAAa,GAAA,OAAA,CAAb,aAAa,CAAb;;AACK,IAAA,YAAe,GAAA,OAAA,CAAf,eAAe,CAAf;;AAgBhC,SAASA,gBAAT,CACLC,GADK,EAELC,IAFK,EAGc;EACnB,IAAMC,UAAU,GAAG,IAAIC,GAAJ,CACjB,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,UAAhC,GAA6CC,CAAAA,GAAAA,MAAAA,EAAiB,iBAAjBA,EAD5B,CAAnB;EAIA,IAAMC,YAAY,GAAGL,IAAI,GACrB,IAAIE,GAAJ,CAAQF,IAAR,EAAcC,UAAd,CADqB,GAErBF,GAAG,CAACO,UAAJP,CAAe,GAAfA,IACA,IAAIG,GAAJ,CAAQ,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,UAAhC,GAA6CA,MAAM,CAACI,QAAPJ,CAAgBK,IAArE,CADAT,GAEAE,UAJJ;;EAMA,WAA+D,IAAIC,GAAJ,CAC7DH,GAD6D,EAE7DM,YAF6D,CAA/D;EAAA,IAAQI,QAAR,QAAQA,QAAR;EAAA,IAAkBC,YAAlB,QAAkBA,YAAlB;EAAA,IAAgCC,MAAhC,QAAgCA,MAAhC;EAAA,IAAwCC,IAAxC,QAAwCA,IAAxC;EAAA,IAA8CJ,IAA9C,QAA8CA,IAA9C;EAAA,IAAoDK,MAApD,QAAoDA,MAApD;;EAIA,IAAIA,MAAM,KAAKZ,UAAU,CAACY,MAA1B,EAAkC;IAChC,MAAM,IAAIC,KAAJ,4DAA8Df,GAA9D,EAAN;EACD;;EACD,OAAO;IACLU,QAAQ,EAARA,QADK;IAELM,KAAK,EAAEC,CAAAA,GAAAA,YAAAA,EAAsB,sBAAtBA,CAAuBN,YAAvBM,CAFF;IAGLL,MAAM,EAANA,MAHK;IAILC,IAAI,EAAJA,IAJK;IAKLJ,IAAI,EAAEA,IAAI,CAACS,KAALT,CAAWP,UAAU,CAACY,MAAXZ,CAAkBiB,MAA7BV;EALD,CAAP;AAOD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseRelativeUrl = parseRelativeUrl;\nvar _utils = require(\"../../utils\");\nvar _querystring = require(\"./querystring\");\nfunction parseRelativeUrl(url, base) {\n    const globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils).getLocationOrigin());\n    const resolvedBase = base ? new URL(base, globalBase) : url.startsWith('.') ? new URL(typeof window === 'undefined' ? 'http://n' : window.location.href) : globalBase;\n    const { pathname , searchParams , search , hash , href , origin  } = new URL(url, resolvedBase);\n    if (origin !== globalBase.origin) {\n        throw new Error(`invariant: invalid relative URL, router received ${url}`);\n    }\n    return {\n        pathname,\n        query: (0, _querystring).searchParamsToUrlQuery(searchParams),\n        search,\n        hash,\n        href: href.slice(globalBase.origin.length)\n    };\n}\n\n//# sourceMappingURL=parse-relative-url.js.map"]},"metadata":{},"sourceType":"script"}