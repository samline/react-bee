{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/sam/Documents/sites/react-bee/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectDomainLocale = detectDomainLocale;\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n  var domainItem;\n  if (domainItems) {\n    if (detectedLocale) {\n      detectedLocale = detectedLocale.toLowerCase();\n    }\n    var _iterator = _createForOfIteratorHelper(domainItems),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        var ref, ref1;\n        // remove port if present\n        var domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some(function (locale) {\n          return locale.toLowerCase() === detectedLocale;\n        }))) {\n          domainItem = item;\n          break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return domainItem;\n}","map":{"version":3,"sources":["../../../../shared/lib/i18n/detect-domain-locale.ts"],"names":["detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","toLowerCase","item","domainHostname","domain","split","defaultLocale","locales","some","locale"],"mappings":"AAAA,YAAA;;AAAA;;;;QAEgBA,kBAAkB,GAAlBA,kBAAkB;AAA3B,SAASA,kBAAkB,CAChCC,WAA4B,EAC5BC,QAAiB,EACjBC,cAAuB,EACvB;EACA,IAAIC,UAAoC;EAExC,IAAIH,WAAW,EAAE;IACf,IAAIE,cAAc,EAAE;MAClBA,cAAc,GAAGA,cAAc,CAACE,WAAW,EAAE;;IAC9C,2CAEkBJ,WAAW;MAAA;IAAA;MAA9B,oDAAgC;QAAA,IAArBK,IAAI;YAEUA,GAAW,EAIhCA,IAAY;QALd;QACA,IAAMC,cAAc,GAAGD,CAAAA,GAAW,GAAXA,IAAI,CAACE,MAAM,KAAA,IAAO,GAAlBF,KAAAA,CAAkB,GAAlBA,GAAW,CAAEG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACJ,WAAW,EAAE;QAC/D,IACEH,QAAQ,KAAKK,cAAc,IAC3BJ,cAAc,KAAKG,IAAI,CAACI,aAAa,CAACL,WAAW,EAAE,KACnDC,CAAAA,IAAY,GAAZA,IAAI,CAACK,OAAO,KAAA,IAAM,GAAlBL,KAAAA,CAAkB,GAAlBA,IAAY,CAAEM,IAAI,CAAC,UAACC,MAAM;UAAA,OAAKA,MAAM,CAACR,WAAW,EAAE,KAAKF,cAAc;QAAA,EAAC,CAAA,EACvE;UACAC,UAAU,GAAGE,IAAI;UACjB;QACD;;IACF;MAAA;IAAA;MAAA;IAAA;EACF;EAED,OAAOF,UAAU;AAClB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.detectDomainLocale = detectDomainLocale;\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map"]},"metadata":{},"sourceType":"script"}