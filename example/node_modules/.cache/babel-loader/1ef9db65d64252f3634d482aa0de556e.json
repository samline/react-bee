{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseRelativeUrl = parseRelativeUrl;\nvar _utils = require(\"../../utils\");\nvar _querystring = require(\"./querystring\");\nfunction parseRelativeUrl(url, base) {\n  var globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils).getLocationOrigin());\n  var resolvedBase = base ? new URL(base, globalBase) : url.startsWith('.') ? new URL(typeof window === 'undefined' ? 'http://n' : window.location.href) : globalBase;\n  var _URL = new URL(url, resolvedBase),\n    pathname = _URL.pathname,\n    searchParams = _URL.searchParams,\n    search = _URL.search,\n    hash = _URL.hash,\n    href = _URL.href,\n    origin = _URL.origin;\n  if (origin !== globalBase.origin) {\n    throw new Error(\"invariant: invalid relative URL, router received \".concat(url));\n  }\n  return {\n    pathname: pathname,\n    query: (0, _querystring).searchParamsToUrlQuery(searchParams),\n    search: search,\n    hash: hash,\n    href: href.slice(globalBase.origin.length)\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/parse-relative-url.ts"],"names":["parseRelativeUrl","url","base","globalBase","URL","window","getLocationOrigin","resolvedBase","startsWith","location","href","pathname","searchParams","search","hash","origin","Error","query","searchParamsToUrlQuery","slice","length"],"mappings":"AAAA,YAAA;;;;;QAkBgBA,gBAAgB,GAAhBA,gBAAgB;AAjBE,IAAA,MAAa,GAAA,OAAA,CAAb,aAAa,CAAA;AACR,IAAA,YAAe,GAAA,OAAA,CAAf,eAAe,CAAA;AAgB/C,SAASA,gBAAgB,CAC9BC,GAAW,EACXC,IAAa,EACM;EACnB,IAAMC,UAAU,GAAG,IAAIC,GAAG,CACxB,OAAOC,MAAM,KAAK,WAAW,GAAG,UAAU,GAAGC,CAAAA,CAAAA,EAAAA,MAAmB,EAAA,iBAAF,EAAE,CACjE;EAED,IAAMC,YAAY,GAAGL,IAAI,GACrB,IAAIE,GAAG,CAACF,IAAI,EAAEC,UAAU,CAAC,GACzBF,GAAG,CAACO,UAAU,CAAC,GAAG,CAAC,GACnB,IAAIJ,GAAG,CAAC,OAAOC,MAAM,KAAK,WAAW,GAAG,UAAU,GAAGA,MAAM,CAACI,QAAQ,CAACC,IAAI,CAAC,GAC1EP,UAAU;EAEd,WAA+D,IAAIC,GAAG,CACpEH,GAAG,EACHM,YAAY,CACb;IAHOI,QAAQ,QAARA,QAAQ;IAAEC,YAAY,QAAZA,YAAY;IAAEC,MAAM,QAANA,MAAM;IAAEC,IAAI,QAAJA,IAAI;IAAEJ,IAAI,QAAJA,IAAI;IAAEK,MAAM,QAANA,MAAM;EAI1D,IAAIA,MAAM,KAAKZ,UAAU,CAACY,MAAM,EAAE;IAChC,MAAM,IAAIC,KAAK,4DAAqDf,GAAG,EAAG;EAC3E;EACD,OAAO;IACLU,QAAQ,EAARA,QAAQ;IACRM,KAAK,EAAEC,CAAAA,CAAAA,EAAAA,YAAoC,EAAA,sBAAd,CAACN,YAAY,CAAC;IAC3CC,MAAM,EAANA,MAAM;IACNC,IAAI,EAAJA,IAAI;IACJJ,IAAI,EAAEA,IAAI,CAACS,KAAK,CAAChB,UAAU,CAACY,MAAM,CAACK,MAAM;GAC1C;AACF","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseRelativeUrl = parseRelativeUrl;\nvar _utils = require(\"../../utils\");\nvar _querystring = require(\"./querystring\");\nfunction parseRelativeUrl(url, base) {\n    const globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils).getLocationOrigin());\n    const resolvedBase = base ? new URL(base, globalBase) : url.startsWith('.') ? new URL(typeof window === 'undefined' ? 'http://n' : window.location.href) : globalBase;\n    const { pathname , searchParams , search , hash , href , origin  } = new URL(url, resolvedBase);\n    if (origin !== globalBase.origin) {\n        throw new Error(`invariant: invalid relative URL, router received ${url}`);\n    }\n    return {\n        pathname,\n        query: (0, _querystring).searchParamsToUrlQuery(searchParams),\n        search,\n        hash,\n        href: href.slice(globalBase.origin.length)\n    };\n}\n\n//# sourceMappingURL=parse-relative-url.js.map"]},"metadata":{},"sourceType":"script"}