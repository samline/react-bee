{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/sam/Documents/sites/react-bee/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\n\nfunction searchParamsToUrlQuery(searchParams) {\n  var query = {};\n  searchParams.forEach(function (value, key) {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value;\n    } else if (Array.isArray(query[key])) {\n      query[key].push(value);\n    } else {\n      query[key] = [query[key], value];\n    }\n  });\n  return query;\n}\n\nfunction stringifyUrlQueryParam(param) {\n  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n    return String(param);\n  } else {\n    return '';\n  }\n}\n\nfunction urlQueryToSearchParams(urlQuery) {\n  var result = new URLSearchParams();\n  Object.entries(urlQuery).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (Array.isArray(value)) {\n      value.forEach(function (item) {\n        return result.append(key, stringifyUrlQueryParam(item));\n      });\n    } else {\n      result.set(key, stringifyUrlQueryParam(value));\n    }\n  });\n  return result;\n}\n\nfunction assign(target) {\n  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    searchParamsList[_key - 1] = arguments[_key];\n  }\n\n  searchParamsList.forEach(function (searchParams) {\n    Array.from(searchParams.keys()).forEach(function (key) {\n      return target.delete(key);\n    });\n    searchParams.forEach(function (value, key) {\n      return target.append(key, value);\n    });\n  });\n  return target;\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/querystring.ts"],"names":["searchParamsToUrlQuery","searchParams","query","forEach","value","key","Array","isArray","push","stringifyUrlQueryParam","param","isNaN","String","urlQueryToSearchParams","urlQuery","result","URLSearchParams","Object","entries","item","append","set","assign","target","searchParamsList","from","keys","delete"],"mappings":"AAAA;;;;;;;QAEgBA,sB,GAAAA,sB;QA4BAa,sB,GAAAA,sB;QAcAS,M,GAAAA,M;;AA1CT,SAAStB,sBAAT,CACLC,YADK,EAEW;EAChB,IAAMC,KAAK,GAAmB,EAA9B;EACAD,YAAY,CAACE,OAAbF,CAAqB,UAACG,KAAD,EAAQC,GAAR,EAAgB;IACnC,IAAI,OAAOH,KAAK,CAACG,GAAD,CAAZ,KAAsB,WAA1B,EAAuC;MACrCH,KAAK,CAACG,GAAD,CAALH,GAAaE,KAAbF;IACD,CAFD,MAEO,IAAII,KAAK,CAACC,OAAND,CAAcJ,KAAK,CAACG,GAAD,CAAnBC,CAAJ,EAA+B;MAClCJ,KAAK,CAACG,GAAD,CAALH,CAAwBM,IAAxBN,CAA6BE,KAA7BF;IACH,CAFM,MAEA;MACLA,KAAK,CAACG,GAAD,CAALH,GAAa,CAACA,KAAK,CAACG,GAAD,CAAN,EAAuBD,KAAvB,CAAbF;IACD;EACF,CARDD;EASA,OAAOC,KAAP;AACD;;AAED,SAASO,sBAAT,CAAgCC,KAAhC,EAAuD;EACrD,IACE,OAAOA,KAAP,KAAiB,QAAjB,IACC,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAACC,KAAK,CAACD,KAAD,CADpC,IAEA,OAAOA,KAAP,KAAiB,SAHnB,EAIE;IACA,OAAOE,MAAM,CAACF,KAAD,CAAb;EACD,CAND,MAMO;IACL,OAAO,EAAP;EACD;AACF;;AAEM,SAASG,sBAAT,CACLC,QADK,EAEY;EACjB,IAAMC,MAAM,GAAG,IAAIC,eAAJ,EAAf;EACAC,MAAM,CAACC,OAAPD,CAAeH,QAAfG,EAAyBd,OAAzBc,CAAiC,gBAAkB;IAAA;IAAA,IAAhBZ,GAAgB;IAAA,IAAXD,KAAW;;IACjD,IAAIE,KAAK,CAACC,OAAND,CAAcF,KAAdE,CAAJ,EAA0B;MACxBF,KAAK,CAACD,OAANC,CAAc,UAACe,IAAD;QAAA,OAAUJ,MAAM,CAACK,MAAPL,CAAcV,GAAdU,EAAmBN,sBAAsB,CAACU,IAAD,CAAzCJ,CAAV;MAAA,CAAdX;IACD,CAFD,MAEO;MACLW,MAAM,CAACM,GAAPN,CAAWV,GAAXU,EAAgBN,sBAAsB,CAACL,KAAD,CAAtCW;IACD;EACF,CANDE;EAOA,OAAOF,MAAP;AACD;;AAEM,SAASO,MAAT,CACLC,MADK,EAGY;EAAA,kCADdC,gBACc;IADdA,gBACc;EAAA;;EACjBA,gBAAgB,CAACrB,OAAjBqB,CAAyB,UAACvB,YAAD,EAAkB;IACzCK,KAAK,CAACmB,IAANnB,CAAWL,YAAY,CAACyB,IAAbzB,EAAXK,EAAgCH,OAAhCG,CAAwC,UAACD,GAAD;MAAA,OAASkB,MAAM,CAACI,MAAPJ,CAAclB,GAAdkB,CAAT;IAAA,CAAxCjB;IACAL,YAAY,CAACE,OAAbF,CAAqB,UAACG,KAAD,EAAQC,GAAR;MAAA,OAAgBkB,MAAM,CAACH,MAAPG,CAAclB,GAAdkB,EAAmBnB,KAAnBmB,CAAhB;IAAA,CAArBtB;EACD,CAHDuB;EAIA,OAAOD,MAAP;AACD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {};\n    searchParams.forEach((value, key)=>{\n        if (typeof query[key] === 'undefined') {\n            query[key] = value;\n        } else if (Array.isArray(query[key])) {\n            query[key].push(value);\n        } else {\n            query[key] = [\n                query[key],\n                value\n            ];\n        }\n    });\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n        return String(param);\n    } else {\n        return '';\n    }\n}\nfunction urlQueryToSearchParams(urlQuery) {\n    const result = new URLSearchParams();\n    Object.entries(urlQuery).forEach(([key, value])=>{\n        if (Array.isArray(value)) {\n            value.forEach((item)=>result.append(key, stringifyUrlQueryParam(item)));\n        } else {\n            result.set(key, stringifyUrlQueryParam(value));\n        }\n    });\n    return result;\n}\nfunction assign(target, ...searchParamsList) {\n    searchParamsList.forEach((searchParams)=>{\n        Array.from(searchParams.keys()).forEach((key)=>target.delete(key));\n        searchParams.forEach((value, key)=>target.append(key, value));\n    });\n    return target;\n}\n\n//# sourceMappingURL=querystring.js.map"]},"metadata":{},"sourceType":"script"}