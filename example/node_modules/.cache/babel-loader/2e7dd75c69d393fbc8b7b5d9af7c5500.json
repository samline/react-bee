{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/sam/Documents/sites/react-bee/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\nfunction searchParamsToUrlQuery(searchParams) {\n  var query = {};\n  searchParams.forEach(function (value, key) {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value;\n    } else if (Array.isArray(query[key])) {\n      query[key].push(value);\n    } else {\n      query[key] = [query[key], value];\n    }\n  });\n  return query;\n}\nfunction stringifyUrlQueryParam(param) {\n  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n    return String(param);\n  } else {\n    return '';\n  }\n}\nfunction urlQueryToSearchParams(urlQuery) {\n  var result = new URLSearchParams();\n  Object.entries(urlQuery).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    if (Array.isArray(value)) {\n      value.forEach(function (item) {\n        return result.append(key, stringifyUrlQueryParam(item));\n      });\n    } else {\n      result.set(key, stringifyUrlQueryParam(value));\n    }\n  });\n  return result;\n}\nfunction assign(target) {\n  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    searchParamsList[_key - 1] = arguments[_key];\n  }\n  searchParamsList.forEach(function (searchParams) {\n    Array.from(searchParams.keys()).forEach(function (key) {\n      return target.delete(key);\n    });\n    searchParams.forEach(function (value, key) {\n      return target.append(key, value);\n    });\n  });\n  return target;\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/querystring.ts"],"names":["searchParamsToUrlQuery","searchParams","query","forEach","value","key","Array","isArray","push","stringifyUrlQueryParam","param","isNaN","String","urlQueryToSearchParams","urlQuery","result","URLSearchParams","Object","entries","item","append","set","assign","target","searchParamsList","from","keys","delete"],"mappings":"AAAA,YAAA;;AAAA;;;;QAEgBA,sBAAsB,GAAtBA,sBAAsB;QA4BtBa,sBAAsB,GAAtBA,sBAAsB;QActBS,MAAM,GAANA,MAAM;AA1Cf,SAAStB,sBAAsB,CACpCC,YAA6B,EACb;EAChB,IAAMC,KAAK,GAAmB,CAAA,CAAE;EAChCD,YAAY,CAACE,OAAO,CAAC,UAACC,KAAK,EAAEC,GAAG,EAAK;IACnC,IAAI,OAAOH,KAAK,CAACG,GAAG,CAAC,KAAK,WAAW,EAAE;MACrCH,KAAK,CAACG,GAAG,CAAC,GAAGD,KAAK;KACnB,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACL,KAAK,CAACG,GAAG,CAAC,CAAC,EAAE;MAClCH,KAAK,CAACG,GAAG,CAAC,CAAcG,IAAI,CAACJ,KAAK,CAAC;KACtC,MAAM;MACLF,KAAK,CAACG,GAAG,CAAC,GAAG,CAACH,KAAK,CAACG,GAAG,CAAC,EAAYD,KAAK,CAAC;IAC3C;GACF,CAAC;EACF,OAAOF,KAAK;AACb;AAED,SAASO,sBAAsB,CAACC,KAAa,EAAU;EACrD,IACE,OAAOA,KAAK,KAAK,QAAQ,IACxB,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACC,KAAK,CAACD,KAAK,CAAC,IAC3C,OAAOA,KAAK,KAAK,SAAS,EAC1B;IACA,OAAOE,MAAM,CAACF,KAAK,CAAC;GACrB,MAAM;IACL,OAAO,EAAE;EACV;AACF;AAEM,SAASG,sBAAsB,CACpCC,QAAwB,EACP;EACjB,IAAMC,MAAM,GAAG,IAAIC,eAAe,EAAE;EACpCC,MAAM,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAACX,OAAO,CAAC,gBAAkB;IAAA;MAAhBE,GAAG;MAAED,KAAK;IAC3C,IAAIE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;MACxBA,KAAK,CAACD,OAAO,CAAC,UAACgB,IAAI;QAAA,OAAKJ,MAAM,CAACK,MAAM,CAACf,GAAG,EAAEI,sBAAsB,CAACU,IAAI,CAAC,CAAC;MAAA,EAAC;KAC1E,MAAM;MACLJ,MAAM,CAACM,GAAG,CAAChB,GAAG,EAAEI,sBAAsB,CAACL,KAAK,CAAC,CAAC;IAC/C;GACF,CAAC;EACF,OAAOW,MAAM;AACd;AAEM,SAASO,MAAM,CACpBC,MAAuB,EAEN;EAAA,kCADdC,gBAAmC;IAAnCA,gBAAmC;EAAA;EAEtCA,gBAAgB,CAACrB,OAAO,CAAC,UAACF,YAAY,EAAK;IACzCK,KAAK,CAACmB,IAAI,CAACxB,YAAY,CAACyB,IAAI,EAAE,CAAC,CAACvB,OAAO,CAAC,UAACE,GAAG;MAAA,OAAKkB,MAAM,CAACI,MAAM,CAACtB,GAAG,CAAC;IAAA,EAAC;IACpEJ,YAAY,CAACE,OAAO,CAAC,UAACC,KAAK,EAAEC,GAAG;MAAA,OAAKkB,MAAM,CAACH,MAAM,CAACf,GAAG,EAAED,KAAK,CAAC;IAAA,EAAC;GAChE,CAAC;EACF,OAAOmB,MAAM;AACd","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {};\n    searchParams.forEach((value, key)=>{\n        if (typeof query[key] === 'undefined') {\n            query[key] = value;\n        } else if (Array.isArray(query[key])) {\n            query[key].push(value);\n        } else {\n            query[key] = [\n                query[key],\n                value\n            ];\n        }\n    });\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n        return String(param);\n    } else {\n        return '';\n    }\n}\nfunction urlQueryToSearchParams(urlQuery) {\n    const result = new URLSearchParams();\n    Object.entries(urlQuery).forEach(([key, value])=>{\n        if (Array.isArray(value)) {\n            value.forEach((item)=>result.append(key, stringifyUrlQueryParam(item)));\n        } else {\n            result.set(key, stringifyUrlQueryParam(value));\n        }\n    });\n    return result;\n}\nfunction assign(target, ...searchParamsList) {\n    searchParamsList.forEach((searchParams)=>{\n        Array.from(searchParams.keys()).forEach((key)=>target.delete(key));\n        searchParams.forEach((value, key)=>target.append(key, value));\n    });\n    return target;\n}\n\n//# sourceMappingURL=querystring.js.map"]},"metadata":{},"sourceType":"script"}