{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseUrl = parseUrl;\n\nvar _querystring = require(\"./querystring\");\n\nvar _parseRelativeUrl = require(\"./parse-relative-url\");\n\nfunction parseUrl(url) {\n  if (url.startsWith('/')) {\n    return (0, _parseRelativeUrl).parseRelativeUrl(url);\n  }\n\n  var parsedURL = new URL(url);\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: (0, _querystring).searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/parse-url.ts"],"names":["parseUrl","url","startsWith","parseRelativeUrl","parsedURL","URL","hash","hostname","href","pathname","port","protocol","query","searchParamsToUrlQuery","searchParams","search"],"mappings":"AAAA;;;;;QAgBgBA,Q,GAAAA,Q;;AAduB,IAAA,YAAe,GAAA,OAAA,CAAf,eAAe,CAAf;;AACN,IAAA,iBAAsB,GAAA,OAAA,CAAtB,sBAAsB,CAAtB;;AAa1B,SAASA,QAAT,CAAkBC,GAAlB,EAA0C;EAC/C,IAAIA,GAAG,CAACC,UAAJD,CAAe,GAAfA,CAAJ,EAAyB;IACvB,OAAOE,CAAAA,GAAAA,iBAAAA,EAAgB,gBAAhBA,CAAiBF,GAAjBE,CAAP;EACD;;EAED,IAAMC,SAAS,GAAG,IAAIC,GAAJ,CAAQJ,GAAR,CAAlB;EACA,OAAO;IACLK,IAAI,EAAEF,SAAS,CAACE,IADX;IAELC,QAAQ,EAAEH,SAAS,CAACG,QAFf;IAGLC,IAAI,EAAEJ,SAAS,CAACI,IAHX;IAILC,QAAQ,EAAEL,SAAS,CAACK,QAJf;IAKLC,IAAI,EAAEN,SAAS,CAACM,IALX;IAMLC,QAAQ,EAAEP,SAAS,CAACO,QANf;IAOLC,KAAK,EAAEC,CAAAA,GAAAA,YAAAA,EAAsB,sBAAtBA,CAAuBT,SAAS,CAACU,YAAjCD,CAPF;IAQLE,MAAM,EAAEX,SAAS,CAACW;EARb,CAAP;AAUD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseUrl = parseUrl;\nvar _querystring = require(\"./querystring\");\nvar _parseRelativeUrl = require(\"./parse-relative-url\");\nfunction parseUrl(url) {\n    if (url.startsWith('/')) {\n        return (0, _parseRelativeUrl).parseRelativeUrl(url);\n    }\n    const parsedURL = new URL(url);\n    return {\n        hash: parsedURL.hash,\n        hostname: parsedURL.hostname,\n        href: parsedURL.href,\n        pathname: parsedURL.pathname,\n        port: parsedURL.port,\n        protocol: parsedURL.protocol,\n        query: (0, _querystring).searchParamsToUrlQuery(parsedURL.searchParams),\n        search: parsedURL.search\n    };\n}\n\n//# sourceMappingURL=parse-url.js.map"]},"metadata":{},"sourceType":"script"}