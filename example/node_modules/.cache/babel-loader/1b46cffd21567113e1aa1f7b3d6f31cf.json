{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeLocalePath = normalizeLocalePath;\nfunction normalizeLocalePath(pathname, locales) {\n  var detectedLocale;\n  // first item will be empty string from splitting at first char\n  var pathnameParts = pathname.split('/');\n  (locales || []).some(function (locale) {\n    if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n      detectedLocale = locale;\n      pathnameParts.splice(1, 1);\n      pathname = pathnameParts.join('/') || '/';\n      return true;\n    }\n    return false;\n  });\n  return {\n    pathname: pathname,\n    detectedLocale: detectedLocale\n  };\n}","map":{"version":3,"sources":["../../../../shared/lib/i18n/normalize-locale-path.ts"],"names":["normalizeLocalePath","pathname","locales","detectedLocale","pathnameParts","split","some","locale","toLowerCase","splice","join"],"mappings":"AAAA,YAAA;;;;;QAcgBA,mBAAmB,GAAnBA,mBAAmB;AAA5B,SAASA,mBAAmB,CACjCC,QAAgB,EAChBC,OAAkB,EACN;EACZ,IAAIC,cAAkC;EACtC;EACA,IAAMC,aAAa,GAAGH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAEvC;EAAA,CAACH,OAAO,IAAI,EAAE,EAAEI,IAAI,CAAC,UAACC,MAAM,EAAK;IAChC,IACEH,aAAa,CAAC,CAAC,CAAC,IAChBA,aAAa,CAAC,CAAC,CAAC,CAACI,WAAW,EAAE,KAAKD,MAAM,CAACC,WAAW,EAAE,EACvD;MACAL,cAAc,GAAGI,MAAM;MACvBH,aAAa,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1BR,QAAQ,GAAGG,aAAa,CAACM,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG;MACzC,OAAO,IAAI;IACZ;IACD,OAAO,KAAK;GACb,CAAC;EAEF,OAAO;IACLT,QAAQ,EAARA,QAAQ;IACRE,cAAc,EAAdA;GACD;AACF","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.normalizeLocalePath = normalizeLocalePath;\nfunction normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map"]},"metadata":{},"sourceType":"script"}