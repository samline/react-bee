{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNextPathnameInfo = getNextPathnameInfo;\n\nvar _normalizeLocalePath = require(\"../../i18n/normalize-locale-path\");\n\nvar _removePathPrefix = require(\"./remove-path-prefix\");\n\nvar _pathHasPrefix = require(\"./path-has-prefix\");\n\nfunction getNextPathnameInfo(pathname, options) {\n  var _nextConfig;\n\n  var _ref = (_nextConfig = options.nextConfig) != null ? _nextConfig : {},\n      basePath = _ref.basePath,\n      i18n = _ref.i18n,\n      trailingSlash = _ref.trailingSlash;\n\n  var info = {\n    pathname: pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n  };\n\n  if (basePath && (0, _pathHasPrefix).pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = (0, _removePathPrefix).removePathPrefix(info.pathname, basePath);\n    info.basePath = basePath;\n  }\n\n  if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n    var paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n    var buildId = paths[0];\n    info.pathname = paths[1] !== 'index' ? \"/\".concat(paths.slice(1).join('/')) : '/';\n    info.buildId = buildId;\n  }\n\n  if (i18n) {\n    var pathLocale = (0, _normalizeLocalePath).normalizeLocalePath(info.pathname, i18n.locales);\n    info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n    info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n  }\n\n  return info;\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/get-next-pathname-info.ts"],"names":["getNextPathnameInfo","pathname","options","basePath","i18n","trailingSlash","nextConfig","info","endsWith","pathHasPrefix","removePathPrefix","parseData","startsWith","paths","replace","split","buildId","slice","join","pathLocale","normalizeLocalePath","locales","locale","detectedLocale"],"mappings":"AAAA;;;;;QA6CgBA,mB,GAAAA,mB;;AA7CoB,IAAA,oBAAkC,GAAA,OAAA,CAAlC,kCAAkC,CAAlC;;AACH,IAAA,iBAAsB,GAAA,OAAA,CAAtB,sBAAsB,CAAtB;;AACH,IAAA,cAAmB,GAAA,OAAA,CAAnB,mBAAmB,CAAnB;;AA2CvB,SAASA,mBAAT,CAA6BC,QAA7B,EAA+CC,OAA/C,EAAiE;MAC5BA,W;;EAA1C,WAA0CA,CAAAA,WAAkB,GAAlBA,OAAO,CAACI,UAARJ,KAAkB,IAAlBA,GAAAA,WAAAA,GAAsB,EAAhE;EAAA,IAAQC,QAAR,QAAQA,QAAR;EAAA,IAAkBC,IAAlB,QAAkBA,IAAlB;EAAA,IAAwBC,aAAxB,QAAwBA,aAAxB;;EACA,IAAME,IAAI,GAAqB;IAC7BN,QAAQ,EAAEA,QADmB;IAE7BI,aAAa,EAAEJ,QAAQ,KAAK,GAAbA,GAAmBA,QAAQ,CAACO,QAATP,CAAkB,GAAlBA,CAAnBA,GAA4CI;EAF9B,CAA/B;;EAKA,IAAIF,QAAQ,IAAIM,CAAAA,GAAAA,cAAAA,EAAa,aAAbA,CAAcF,IAAI,CAACN,QAAnBQ,EAA6BN,QAA7BM,CAAhB,EAAwD;IACtDF,IAAI,CAACN,QAALM,GAAgBG,CAAAA,GAAAA,iBAAAA,EAAgB,gBAAhBA,CAAiBH,IAAI,CAACN,QAAtBS,EAAgCP,QAAhCO,CAAhBH;IACAA,IAAI,CAACJ,QAALI,GAAgBJ,QAAhBI;EACD;;EAED,IACEL,OAAO,CAACS,SAART,KAAsB,IAAtBA,IACAK,IAAI,CAACN,QAALM,CAAcK,UAAdL,CAAyB,cAAzBA,CADAL,IAEAK,IAAI,CAACN,QAALM,CAAcC,QAAdD,CAAuB,OAAvBA,CAHF,EAIE;IACA,IAAMM,KAAK,GAAGN,IAAI,CAACN,QAALM,CACXO,OADWP,CACJ,kBADIA,EACiB,EADjBA,EAEXO,OAFWP,CAEJ,SAFIA,EAEQ,EAFRA,EAGXQ,KAHWR,CAGL,GAHKA,CAAd;IAKA,IAAMS,OAAO,GAAGH,KAAK,CAAC,CAAD,CAArB;IACAN,IAAI,CAACN,QAALM,GAAgBM,KAAK,CAAC,CAAD,CAALA,KAAa,OAAbA,cAA2BA,KAAK,CAACI,KAANJ,CAAY,CAAZA,EAAeK,IAAfL,CAAoB,GAApBA,CAA3BA,IAAwD,GAAxEN;IACAA,IAAI,CAACS,OAALT,GAAeS,OAAfT;EACD;;EAED,IAAIH,IAAJ,EAAU;IACR,IAAMe,UAAU,GAAGC,CAAAA,GAAAA,oBAAAA,EAAmB,mBAAnBA,CAAoBb,IAAI,CAACN,QAAzBmB,EAAmChB,IAAI,CAACiB,OAAxCD,CAAnB;IACAb,IAAI,CAACe,MAALf,GAAcY,UAAU,IAAA,IAAVA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAEI,cAA1BhB;IACAA,IAAI,CAACN,QAALM,GAAgBY,CAAAA,UAAU,IAAA,IAAVA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAElB,QAAZkB,KAAwBZ,IAAI,CAACN,QAA7CM;EACD;;EAED,OAAOA,IAAP;AACD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getNextPathnameInfo = getNextPathnameInfo;\nvar _normalizeLocalePath = require(\"../../i18n/normalize-locale-path\");\nvar _removePathPrefix = require(\"./remove-path-prefix\");\nvar _pathHasPrefix = require(\"./path-has-prefix\");\nfunction getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && (0, _pathHasPrefix).pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = (0, _removePathPrefix).removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = (0, _normalizeLocalePath).normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map"]},"metadata":{},"sourceType":"script"}